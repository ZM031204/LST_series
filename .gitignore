###############################################################################
# Python Project .gitignore
#
# 本文件用于告诉 Git 哪些文件和文件夹不需要纳入版本控制。
# 主要目的是：
#   1. 避免提交敏感信息（如密钥、配置文件、数据库文件）
#   2. 避免提交自动生成的中间文件（如缓存、编译文件、日志）
#   3. 避免提交依赖环境和临时文件（如虚拟环境、打包产物）
#
# 使用方法：
#   - 将此文件命名为 `.gitignore`，放置于项目根目录
#   - Git 在提交时会自动忽略其中列出的文件/目录
#
# 注意事项：
#   - 如果需要强制提交某个被忽略的文件，可使用：
#       git add -f <文件路径>
#   - 如果需要临时允许 Git 跟踪某个文件，可以在 `.gitignore` 中删除对应规则
#
###############################################################################

# === 项目专用文件（敏感/临时/大文件） ===
client_secrets.json
credentials.json
process_monitor.txt
*.xlsx
*.html
.env
convert_js_to_python.py
lst.ipynb
series/
.fuse*
*.log
*.csv

# === Python 缓存/字节码文件 ===
__pycache__/
*.py[cod]
*$py.class

# === C 扩展 ===
*.so

# === 打包/发布相关文件 ===
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# === PyInstaller 产物 ===
*.manifest
*.spec

# === 安装日志 ===
pip-log.txt
pip-delete-this-directory.txt

# === 测试与覆盖率报告 ===
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# === 翻译文件 ===
*.mo
*.pot

# === Django 特有文件 ===
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# === Flask 特有文件 ===
instance/
.webassets-cache

# === Scrapy 特有文件 ===
.scrapy

# === Sphinx 文档构建目录 ===
docs/_build/

# === PyBuilder ===
.pybuilder/
target/

# === Jupyter Notebook ===
.ipynb_checkpoints

# === IPython ===
profile_default/
ipython_config.py

# === 虚拟环境目录 ===
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# === Spyder IDE 配置 ===
.spyderproject
.spyproject

# === Rope 配置 ===
.ropeproject

# === MkDocs 生成网站 ===
/site

# === mypy 静态类型检查缓存 ===
.mypy_cache/
.dmypy.json
dmypy.json

# === Pyre 静态类型检查 ===
.pyre/

# === pytype 静态类型检查 ===
.pytype/

# === Cython 调试文件 ===
cython_debug/

# === PyCharm IDE 配置（已注释，必要时可取消注释忽略） ===
#.idea/

# === PyPI 配置文件 ===
.pypirc

# === 包管理工具锁文件（根据团队习惯决定是否忽略） ===
# pipenv: Pipfile.lock
# poetry: poetry.lock
# pdm: pdm.lock
.pdm.toml
.pdm-python
.pdm-build/
# uv: uv.lock
